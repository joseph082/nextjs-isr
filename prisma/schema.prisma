// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Student {
  id        String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  firstName String       @db.VarChar(80) // or use full name. google names can change so confirm name on signup
  lastName  String       @db.VarChar(80)
  email     String       @unique @db.VarChar(100) // https://stackoverflow.com/questions/1199190/what-is-the-optimal-length-for-an-email-address-in-a-database
  jobs      LabeledJob[] // this is explicit many-to-many
  // https://www.prisma.io/docs/concepts/components/prisma-schema/relations/many-to-many-relations#rules-for-defining-an-implicit-m-n-relation:~:text=Be%20aware%20that%3A-,You,-cannot%20use%20a
  // joinedDate maybe
  // and other filter info like major, year, etc
}

model Researcher {
  id        String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  firstName String @db.VarChar(50)
  lastName  String @db.VarChar(50)
  email     String @unique @db.VarChar(100)
  jobs      Job[]
  labs      Lab[] // implicit many to many
}

model Lab {
  id          String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String       @db.VarChar(50)
  slug        String       @unique @db.VarChar(50) // could make this the ID
  description String
  jobs        Job[]
  researchers Researcher[] // implicit many to many
}

model Job {
  id          Int          @id @default(autoincrement()) // or random
  created     DateTime     @default(now())
  closingDate DateTime?
  closed      Boolean // @default(false)
  title       String       @db.VarChar(50)
  description String
  posters     Researcher[]
  // filters
  lab         Lab          @relation(fields: [labId], references: [id])
  labId       String       @db.Uuid
  applicants  LabeledJob[]
}

enum JobStatus {
  HIDDEN
  INTERESTED
  IN_PROGRESS
  APPLIED
  IN_REVIEW
  WITHDRAWN // delete application if withdrawn?
  ACCEPTED
  REJECTED // closed
}

model LabeledJob {
  job         Job       @relation(fields: [jobId], references: [id])
  jobId       Int
  applicant   Student   @relation(fields: [applicantId], references: [id])
  applicantId String    @db.Uuid
  // applied     Boolean
  status      JobStatus

  @@id([jobId, applicantId])
}

// model Student {
//   id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//   firstName String @db.VarChar(50)
//   lastName String @db.VarChar(50)
//   email String @unique @db.VarChar(100)
//   applied Job[]  // https://www.prisma.io/docs/concepts/components/prisma-schema/relations/many-to-many-relations implicit
//   // https://stackoverflow.com/questions/1199190/what-is-the-optimal-length-for-an-email-address-in-a-database
//   // joined maybe
// }

// model Researcher {
//   id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//   firstName String @db.VarChar(50)
//   lastName String @db.VarChar(50)
//   email String @unique @db.VarChar(100)
//   jobs Job[]
// }

// model Lab {
//   id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
//   name String @db.VarChar(50)
//   slug String @db.VarChar(50) @unique // or prob make the ID
//   description String

//   jobs Job[]
// }

// model Job {
//   id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid // or autoincrement
//   created DateTime @default(now())
//   closingTime DateTime?
//   closed Boolean // @default(false)
//   title String @db.VarChar(50)
//   description String
//   posters Researcher[]
//   // filters
//   lab Lab @relation(fields: [labId], references: [id])
//   labId String @db.Uuid
//   applicants Student[]
// }
